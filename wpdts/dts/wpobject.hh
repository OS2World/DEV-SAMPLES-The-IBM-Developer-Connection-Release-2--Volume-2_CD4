#ifndef _DTS_HH_INCLUDED_wpobject
#define _DTS_HH_INCLUDED_wpobject
/* Start Class WPObject */

// This file was generated by the IBM "DirectToSOM" emitter for C++ (V1.77)
// Generated at 08/16/95 01:12:49 EDT
// This is class: WPObject
// Mangled class name: WPObject
// SE: May 19/94

#include <som.hh>

     #pragma SOMAsDefault(on)
class SOMClass;
     #pragma SOMAsDefault(pop)
     #pragma SOMAsDefault(on)
class SOMObject;
     #pragma SOMAsDefault(pop)
     #pragma SOMAsDefault(on)
class WPFolder;
     #pragma SOMAsDefault(pop)
     #pragma SOMAsDefault(on)
class M_WPObject;
     #pragma SOMAsDefault(pop)
     #pragma SOMAsDefault(on)
class WPObject;
     #pragma SOMAsDefault(pop)

   #define INCL_WINSTDCNR
   #include <pmstddlg.h>

      #ifdef _wpCreateShadowObject2
         #undef _wpCreateShadowObject2
      #endif
      #define _wpCreateShadowObject2 _wpCreateShadowObjectExt


      /* Object style flags (see wpSetStyle) */

      #define OBJSTYLE_NOMOVE          2
      #define OBJSTYLE_NOLINK          4
      #define OBJSTYLE_NOCOPY          8
      #define OBJSTYLE_NOTDEFAULTICON 16   /* Intentionally not declared CLSSTYLE */
      #define OBJSTYLE_TEMPLATE       32
      #define OBJSTYLE_NODELETE       64
      #define OBJSTYLE_NOPRINT       128
      #define OBJSTYLE_NODRAG        256
      #define OBJSTYLE_NOTVISIBLE    512
      #define OBJSTYLE_NOSETTINGS   1024
      #define OBJSTYLE_NORENAME     2048
      #define OBJSTYLE_NODROP       4096
      #define OBJSTYLE_NODROPON     8192   /* Use instead of OBJSTYLE_NODROP,
                                              because OBJSTYLE_NODROP and
                                              CLSSTYLE_PRIVATE have the same
                                              value (DD 86093F) */
      #define OBJSTYLE_CUSTOMICON   16384  /* Use instead of OBJSTYLE_NOTDEFAULTICON
                                               because OBJSTYLE_NOTDEFAULTICON and
                                               CLSSTYLE_NEVERTEMPLATE have the same
                                               value (DD 86093F) */

      /*  Class style flags (see wpclsQueryStyle) */

      #define CLSSTYLE_NEVERMOVE      OBJSTYLE_NOMOVE
      #define CLSSTYLE_NEVERLINK      OBJSTYLE_NOLINK
      #define CLSSTYLE_NEVERCOPY      OBJSTYLE_NOCOPY
      #define CLSSTYLE_NEVERTEMPLATE  16
      #define CLSSTYLE_NEVERDELETE    OBJSTYLE_NODELETE
      #define CLSSTYLE_NEVERPRINT     OBJSTYLE_NOPRINT
      #define CLSSTYLE_NEVERDRAG      OBJSTYLE_NODRAG
      #define CLSSTYLE_NEVERVISIBLE   OBJSTYLE_NOTVISIBLE
      #define CLSSTYLE_NEVERRENAME    OBJSTYLE_NORENAME
      #define CLSSTYLE_PRIVATE        4096   /* Intentionally not declared OBJSTYLE */
      #define CLSSTYLE_NEVERSETTINGS  OBJSTYLE_NOSETTINGS                      /*DD 86093F*/
      #define CLSSTYLE_NEVERDROPON    OBJSTYLE_NODROPON                        /*DD 86093F*/
      #define CLSSTYLE_HIDDEN         32768  /* Use instead of CLSSTYLE_PRIVATE
                                                 because OBJSTYLE_NODROP and
                                                 CLSSTYLE_PRIVATE have the same
                                                 value (DD 86093F) */
      #define CLSSTYLE_DONTTEMPLATE   65536  /* Use instead of CLSSTYLE_NEVERTEMPLATE
                                                 because OBJSTYLE_NOTDEFAULTICON and
                                                 CLSSTYLE_NEVERTEMPLATE have the same
                                                 value (DD 86093F) */

      /* Flags for wpObjectReady() method */
      #define OR_NEW           0x00000001
      #define OR_AWAKE         0x00000002
      #define OR_REFERENCE     0x10000000
      #define OR_FROMTEMPLATE (0x00000004 | OR_REFERENCE)
      #define OR_FROMCOPY     (0x00000008 | OR_REFERENCE)
      #define OR_SHADOW       (0x00000010 | OR_REFERENCE)

      /*  Flags for the wpFilterPopupMenu() method */

      #define CTXT_CRANOTHER     0x0001   /* Flags for ulFlags */
      #define CTXT_NEW           CTXT_CRANOTHER
      #define CTXT_OPEN          0x0002
      #define CTXT_WINDOW        0x0004
      #define CTXT_SWITCHTO      CTXT_WINDOW
      #define CTXT_CLOSE         0x0008
      #define CTXT_SETTINGS      0x0010
      #define CTXT_PRINT         0x0020
      #define CTXT_HELP          0x0040
      #define CTXT_DELETE        0x0080
      #define CTXT_COPY          0x0100
      #define CTXT_MOVE          0x0200
      #define CTXT_SHADOW        0x0400
      #define CTXT_LINK          CTXT_SHADOW
      #define CTXT_PROGRAM       0x0800
      #define CTXT_ICON        0x001000
      #define CTXT_TREE        0x002000
      #define CTXT_DETAILS     0x004000
      #define CTXT_FIND        0x008000
      #define CTXT_SELECT      0x010000
      #define CTXT_ARRANGE     0x020000
      #define CTXT_SORT        0x040000
      #define CTXT_SHUTDOWN    0x080000
      #define CTXT_LOCKUP      0x100000
      #define CTXT_PALETTE     0x200000
      #define CTXT_REFRESH     0x400000
      #define CTXT_PICKUP      0x800000              /*rme88844*/
      #define CTXT_PUTDOWN        0x1000000          /*rme88844*/
      #define CTXT_PUTDOWN_CANCEL 0x2000000          /*rme88844*/

     /* Flags for the wpDisplayMenu() method */

     #define MENU_OBJECTPOPUP          0x00000001
     #define MENU_OPENVIEWPOPUP        0x00000002
     #define MENU_TITLEBARPULLDOWN     0x00000003
     #define MENU_TITLEBARPULLDOWNINT  0x00000004
     #define MENU_USER                 0x80000000

      /* common context menu ids */

      #define WPMENUID_USER          0x6500
      #define WPMENUID_PRIMARY            0
      #define WPMENUID_OPEN               1
      #define WPMENUID_HELP               2
      #define WPMENUID_PRINT              3
      #define WPMENUID_SELECT             4
      #define WPMENUID_SORT               5
      #define WPMENUID_TREE               123                                 /*DD 86092F*/
      #define WPMENUID_FIND               8                                   /*DD 86092F*/
      #define WPMENUID_CREATEANOTHER      101                                 /*DD 86092F*/
      #define WPMENUID_MOVE               107                                 /*DD 86092F*/
      #define WPMENUID_COPY               108                                 /*DD 86092F*/
      #define WPMENUID_DELETE             109                                 /*DD 86092F*/
      #define WPMENUID_PROPERTIES         112                                 /*DD 86092F*/
      #define WPMENUID_SELALL             114                                 /*DD 86092F*/
      #define WPMENUID_DESELALL           115                                 /*DD 86092F*/
      #define WPMENUID_RESERVED1          118                                 /*DD 86092F*/
      #define WPMENUID_CLOSE              120                                 /*DD 86092F*/
      #define WPMENUID_FORMAT             124                                 /*DD 86092F*/
      #define WPMENUID_CHKDSK             128                                 /*DD 86092F*/
      #define WPMENUID_FIXDSK             129                                 /*DD 86092F*/
      #define WPMENUID_PROGRAM            132                                 /*DD 86092F*/
      #define WPMENUID_COPYDSK            182                                 /*DD 86092F*/
      #define WPMENUID_LOCKDISK           184                                 /*DD 86092F*/
      #define WPMENUID_EJECTDISK          185                                 /*DD 86092F*/
      #define WPMENUID_UNLOCKDISK         186                                 /*DD 86092F*/
      #define WPMENUID_PICKUP             188                                 /* rme77131*/
      #define WPMENUID_PUTDOWN            189                                 /* rme77131*/
      #define WPMENUID_PUTDOWN_COPY       190                                 /* rme77131*/
      #define WPMENUID_PUTDOWN_MOVE       191                                 /* rme77131*/
      #define WPMENUID_PUTDOWN_LINK       192                                 /* rme77131*/
      #define WPMENUID_PUTDOWN_CANCEL     193                                 /* rme77131*/
      #define WPMENUID_PUTDOWN_CREATE     194                                 /* rme77131*/
      #define WPMENUID_ICON               303                                 /*DD 86092F*/
      #define WPMENUID_DETAILS            304                                 /*DD 86092F*/
      #define WPMENUID_ARRANGE            309                                 /*DD 86092F*/
      #define WPMENUID_RESERVED2          315                                 /*DD 86092F*/
      #define WPMENUID_CREATESHADOW       316                                 /*DD 86092F*/
      #define WPMENUID_PALETTE            317                                 /*DD 86092F*/
      #define WPMENUID_REFRESH            503                                 /*DD 86092F*/
      #define WPMENUID_HELP_FOR_HELP      601                                 /*DD 86092F*/
      #define WPMENUID_HOWTOGETHELP       601                                 /*DD 86092F*/
      #define WPMENUID_EXTENDEDHELP       602                                 /*DD 86092F*/
      #define WPMENUID_HELPKEYS           603                                 /*DD 86092F*/
      #define WPMENUID_HELPINDEX          604                                 /*DD 86092F*/
      #define WPMENUID_SHUTDOWN           704                                 /*DD 86092F*/
      #define WPMENUID_LOCKUP             705                                 /*DD 86092F*/
      #define WPMENUID_LOGIN              708                                 /*DD 86092F*/
      #define WPMENUID_LOGOUT             709                                 /*DD 86092F*/
      #define WPMENUID_ASSIGN             710                                 /*DD 86092F*/
      #define WPMENUID_UNASSIGN           711                                 /*DD 86092F*/
      #define WPMENUID_ACCESSNEW          712                                 /*DD 86092F*/
      #define WPMENUID_SYSTEMSETUP        713                                 /*DD 86092F*/


      /*  Open views for the wpOpen() method */

      #define OPEN_UNKNOWN      -1
      #define OPEN_DEFAULT       0
      #define OPEN_CONTENTS      1
      #define OPEN_SETTINGS      2
      #define OPEN_HELP          3
      #define OPEN_RUNNING       4
      #define OPEN_PROMPTDLG     5
      #define OPEN_PALETTE       121                                   /*SPLIT*/
      #define OPEN_USER          0x6500

      /*  Definitions for the INUSE list that is kept
       *  for every object via wpAddToObjUseList and
       *  wpRemoveFromObjUseList methods...
       */

      /* This structure is always followed immediately by a type
       * dependant struct such as MEMORYITEM,RECORDITEM,VIEWITEM
       * or some other user defined structure...
       */
      typedef struct _USEITEM
      {
         ULONG  type;                  /* Type of this Item */
         struct _USEITEM *pNext;   /* Next item in use list */
      } USEITEM;
      typedef USEITEM *PUSEITEM;

      #define USAGE_MEMORY          1  /* Values of 'type' */
      #define USAGE_RECORD          4
      #define USAGE_OPENVIEW        5
      #define USAGE_LINK            6
      #define USAGE_OPENFILE       20

      typedef struct _MEMORYITEM       /* USAGE_MEMORY struct */
      {
         ULONG     cbBuffer;           /* Number of bytes in memory block */
      } MEMORYITEM;
      typedef MEMORYITEM *PMEMORYITEM;

      typedef struct _RECORDITEM       /* USAGE_RECORD struct */
      {
         HWND            hwndCnr;      /* Cnr into which object is inserted */
         PMINIRECORDCORE pRecord;      /* Record pointer within that cnr */
         ULONG           ulUser;       /* For application use RECSH */
      } RECORDITEM;
      typedef RECORDITEM *PRECORDITEM;

      #define VIEWSTATE_OPENING       0x0001   /* The view is being opened */
      #define VIEWSTATE_OBJECTDELETED 0x0002   /* The object has been deleted */
      #define VIEWSTATE_USERHIDDEN    0x0004   /* The view was hidden by user */
      #define VIEWSTATE_POPULATING    0x0008   /* The view is populating      */
      #define VIEWSTATE_USERMINIMIZED 0x0010   /* The view was minimized by the user */
      #define VIEWSTATE_CLOSING       0x0020   /* The view is closing */
      #define VIEWSTATE_DELETING      0x0040   /* The object is being deleted */

      typedef struct _VIEWITEM         /* USAGE_OPENVIEW struct */
      {
         ULONG        view;            /* Object view that this represents */
         LHANDLE      handle;          /* Open handle */
         ULONG        ulViewState;     /* View State flags */
         HWND         hwndCnr;         /* System use only (window animation) */
         PMINIRECORDCORE pRecord;      /* System use only (window animation) */
      } VIEWITEM;
      typedef VIEWITEM *PVIEWITEM;

      typedef struct _LINKITEM         /* USAGE_LINK struct */
      {
         WPObject    *LinkObj;         /* The link object */
      } LINKITEM;
      typedef LINKITEM *PLINKITEM;

      typedef struct _VIEWFILE         /* USAGE_OPENFILE struct */
      {
         ULONG        ulMenuId;        /* Menu id if association or menu page */
         LHANDLE      handle;          /* Open handle */
         HWND         hwndCnr;         /* System use only (window animation) */
         PMINIRECORDCORE pRecord;      /* System use only (window animation) */
      } VIEWFILE;
      typedef VIEWFILE *PVIEWFILE;

      /* Notes: The class name immediately follows the control block. The
       *        first instance variable control block immediately follows
       *        this.
       */
      typedef struct _WPSRCLASSBLOCK
      {
        SHORT   ClassNameLength;       /* Length of class name, including the
                                        * .. null terminator. This must be a
                                        * .. SHORT and must be at the beginning
                                        * .. of the structure.
                                        */
        USHORT  IVarLength;            /* Length of instance variable
                                        * .. information, including the two-
                                        * .. byte null terminator
                                        */
      } WPSRCLASSBLOCK;

      /*  Persistant storage structures (see wpSaveShort
       *  and wpRestoreShort etc...)
       */


      /* This control structure does not reside in the dormant state.
       * It is used only when a persistant data block is
       * resident in memory - either when an object is being saved or
       * when it is being restored...
       */
      typedef struct _OBJDATA
      {
         WPSRCLASSBLOCK       *CurrentClass;
         WPSRCLASSBLOCK       *First;
         PUCHAR                NextData;
         USHORT                Length;
      } OBJDATA;
      typedef OBJDATA *POBJDATA;

      /*  wpCnrInsertObject/wpCnrRemoveObject structs
       *  and macros...
       */

      typedef struct _CLASSDETAILS     /* Class Details struct */
      {
         PSZ          pszAttribute;    /* Translatable string for a class attribute*/
         PVOID        pSortRecord;     /* Function pointer for sort function for attribute*/
         struct _CLASSDETAILS *pNext; /* Next item in class details list */
      } CLASSDETAILS;
      typedef CLASSDETAILS *PCLASSDETAILS;

      /* Macro to return the object associated with a given MINIRECORDCORE
       * that was inserted using the wpCnrInsertObject method
       */
      #define OBJECT_FROM_PREC( prec )   ( (PVOID)( * (((PULONG)prec)-2) ) )

      /* Macro to access the app defineable dword within the RECORDITEM
       * structure that is created when an object is put into a list
       * control using the wpCnrInsertObject method.
       */
      PULONG EXPENTRY ShlGetUserWordPtr(
         HWND            hwndCnr,
         PMINIRECORDCORE prec );

      #define USERWORD_FROM_PREC( hwnd, prec )              \
         ( (ULONG)( *ShlGetUserWordPtr(hwnd,prec) ) )

      /* Details comparison function definition
       *
       *    Param1  PVOID   - Pointer to details field value
       *    Param2  PVOID   - Pointer to value to be compared with
       *
       *    Returns LONG    - Must be CMP_EQUAL, CMP_GREATER, CMP_LESS
       */
      typedef LONG (EXPENTRY FNCOMPARE)(PVOID,PVOID);
      typedef FNCOMPARE *PFNCOMPARE;

      #define CMP_EQUAL            0
      #define CMP_GREATER          1
      #define CMP_LESS             2
      #define CMP_GREATER_OR_EQUAL 3
      #define CMP_LESS_OR_EQUAL    4
      #define CMP_NOT_EQUAL        5

      #define NUM_CMP_VALUES       6

      /* Owner draw function definition
       *
       *    Param1  HWND  - Handle of window that is being painted
       *    Param2  PVOID - POWNERITEM structure pointer, see the container
       *                    control programming reference for the meaning
       *                    of the fields in this structure.
       *    Param3  PVOID - Pointer to the comparison value to draw (this
       *                    is NULL, except when this function is painting
       *                    its value into the include criteria dialog
       *                    when it points to Criteria.CompareValue...)
       *
       *    Returns BOOL  - TRUE if the field was ownerdrawn, FALSE if the
       *                    container control should do default painting.
       */
      typedef BOOL (EXPENTRY FNOWNDRW)(HWND,PVOID,PVOID);
      typedef FNOWNDRW *PFNOWNDRW;

      /* Details comparison criteria structure
       */
      typedef struct _CRITERIA
      {
         PVOID            pReserved;           /* Reserved - MUST be null!!!! */
         struct _CRITERIA *pNext;
         struct _CRITERIA *pPrev;
         ULONG            ClassFieldInfoIndex; /* Index of the details field  */
         ULONG            LogicalOperator;     /* CRITERIA_AND or CRITERIA_OR */
         ULONG            ComparisonType;      /* CMP_LESS_OR_EQUAL etc...    */
         ULONG            ulLenCompareValue;   /* sizeof(ComparisonData)      */
         CHAR             CompareValue[1];     /* Value to be compared with   */
      } CRITERIA;
      typedef CRITERIA *PCRITERIA;

      #define CRITERIA_AND        0
      #define CRITERIA_OR         1

      /* ClassCriteria structure: points to a linked list of CRITERIA
       * for the given class. ClassCriteria may be linked into a list
       * too - and passed to a filter object, or the wpclsFindObjectFirst
       * method call...
       */
      typedef struct _CLASSCRITERIA                                     /*!INC*/
      {
         struct _CLASSCRITERIA *pNext;
         struct _CLASSCRITERIA *pPrev;
         M_WPObject            *Class;          /* Class object */
         PCRITERIA              pCriteria;      /* Linked list of criteria */
         WPObject              *NotifyObject;   /* Owner of the criteria list */
      } CLASSCRITERIA;
      typedef CLASSCRITERIA *PCLASSCRITERIA;

      /* This structure is passed to a details criteria edit window
       * when it is created, so that it knows the current value and
       * min/max values for the criteria to be edited.
       *
       * As the user modifies the compare value using the criteria
       * edit window, it should update the buffer pointed to by
       * 'pCompareValue'.
       */
      typedef struct _EDITCTLINIT                                       /*!INC*/
      {
         ULONG cb;                /* must have length in control data! MindyP */
         PVOID pCompareValue;     /* Buffer containing the current value */
         ULONG ulLenCompareValue; /* Length of pCompareValue buffer */
         PVOID pMinCompareValue;  /* READ-ONLY parameter, NULL => default */
         PVOID pMaxCompareValue;  /* READ-ONLY parameter, NULL => default */
      } EDITCTLINIT;
      typedef EDITCTLINIT *PEDITCTLINIT;

      /* Structure for wpclsQueryDetailsInfo method
       *
       * CLASSFIELDINFO is identical to the FIELDINFO structure of the
       * container control with the following differences:
       *
       * - The offStruct field from FIELDINFO is reserved.
       * - The offFieldData and usLenFieldData structure elements have
       *   been added.
       * - Compare/Sort/Ownerdraw fields have also been added for the
       *   convenience of the programmer, so that object details can
       *   be customized and objects can be found or included by any
       *   of their displayable object details.
       *
       * For example if the application has the following details data:
       *
       * typedef struct _SAMPLE {
       *   CDATE   cdate;
       *   CTIME   ctime;
       *   PSZ     psz;
       * }  SAMPLE;
       *
       * classfieldinfo[0].offFieldData   = FIELDOFFSET(SAMPLE,cdate);
       * classfieldinfo[0].ulLenFieldData = FIELDOFFSET(SAMPLE,ctime) -
       *                                    FIELDOFFSET(SAMPLE,cdate);
       *
       * classfieldinfo[1].offFieldData   = FIELDOFFSET(SAMPLE,ctime);
       * classfieldinfo[1].ulLenFieldData = FIELDOFFSET(SAMPLE,psz) -
       *                                    FIELDOFFSET(SAMPLE,ctime);
       *
       * classfieldinfo[2].offFieldData   = FIELDOFFSET(SAMPLE,psz);
       * classfieldinfo[2].ulLenFieldData = sizeof(SAMPLE) -
       *                                    FIELDOFFSET(SAMPLE,psz);
       *
       * NOTE: It is essential that the fields be linked in order ex. above
       *       cdate must be followed by ctime and finally psz.
       */
      typedef struct _CLASSFIELDINFO                                    /*!INC*/
      {
         /* Details field attributes
          */
         ULONG      cb;                  /* size of CLASSFIELDINFO struct  */
         ULONG      flData;              /* attributes of field's data     */
         ULONG      flTitle;             /* attributes of field's title    */
         PVOID      pTitleData;          /* title data (default is string) */
                                         /* If CFT_BITMAP, must be HBITMAP */
         ULONG      ulReserved;          /* Reserved                       */
         PVOID      pUserData;           /* pointer to user data           */
         struct _CLASSFIELDINFO *pNextFieldInfo; /* pointer to next linked */
                                                /* CLASSFIELDINFO structure*/
         ULONG      cxWidth;             /* width of field in pels         */
         ULONG      offFieldData;        /* offset from beginning of       */
                                         /*   this class's data for this   */
                                         /*   field. (first field is 0).   */
         ULONG      ulLenFieldData;      /* width of data in bytes.        */
                                         /*   (4 for a pointer).           */
         PFNOWNDRW  pfnOwnerDraw;        /* Ownerdraw procedure for detail */
                                         /* column. Can be NULL except if  */
                                         /* ownerdraw is being used.       */
         /* Include/Sort parameters
          */
         ULONG      flCompare;           /* Flags: for example, use the    */
                                         /*   COMPARE_SUPPORTED flag if    */
                                         /*   your field can be compared   */
         PFNCOMPARE pfnCompare;          /* Comparison function for this   */
                                         /*   field. Can be NULL unless    */
                                         /*   ownerdraw is used.           */
         ULONG      DefaultComparison;   /* This is the default compare    */
                                         /*   operator in the include      */
                                         /*   page criteria dialog. (eg:   */
                                         /*   CMP_LESS_OR_EQUAL)           */
         ULONG      ulLenCompareValue;   /* Maximum length of the compare  */
                                         /*   data. Can be NULL unless     */
                                         /*   ownerdraw is used.           */
         PVOID      pDefCompareValue;    /* The default value to be used   */
                                         /*   for comparisons. Can be NULL */
                                         /*   unless ownerdraw is used.    */
         PVOID      pMinCompareValue;    /* The default value to be used   */
                                         /*   for comparisons.Can be NULL  */
                                         /*   unless ownerdraw is used.    */
         PVOID      pMaxCompareValue;    /* The default value to be used   */
                                         /*   for comparisons.Can be NULL  */
                                         /*   unless ownerdraw is used.    */
         PSZ        pszEditControlClass; /* Window class to be used to edit*/
                                         /*   the compare value. Can be    */
                                         /*   NULL unless ownerdraw is used*/
         PFNCOMPARE pfnSort;             /* Sort function for this @SM09511*/
                                         /*   field. Can be NULL unless    */
                                         /*   ownerdraw is used.           */
         PSZ        *pNewComp;
      } CLASSFIELDINFO;

      typedef CLASSFIELDINFO *PCLASSFIELDINFO;

      #define COMPARE_SUPPORTED      1
      #define SORTBY_SUPPORTED       2

      /* Standard notebook size constants */
      #define STDNOTEBOOKWIDTH    290
      #define STDNOTEBOOKHEIGHT   275

      /* Confirm flags */
      #define CONFIRM_DELETE             0x0001
      #define CONFIRM_DELETEFOLDER       0x0002
      #define CONFIRM_RENAMEFILESWITHEXT 0x0004
      #define CONFIRM_KEEPASSOC          0x0008
      #define CONFIRM_ACTION             0x0010
      #define CONFIRM_PROGRESS           0x0020
      #define CONFIRM_ALLOWFORCEDELETE   0x0040
      #define CONFIRM_FORCEDELETE        0x0080

      #define OK_DELETE             1
      #define NO_DELETE             2
      #define CANCEL_DELETE         3

      #define NUM_OBJDETAILS_FIELDS    5     /* number of object details */

      /* Search Type for wpclsQueryExtendedCriteria */

      #define SEARCH_ALL_FOLDERS 1
      #define SEARCH_THIS_FOLDER 2
      #define SEARCH_THIS_TREE   3

      /* Find method related types and constants */

      typedef WPObject   *OBJECT;                             /* FIND */
      typedef OBJECT     *POBJECT;
      typedef M_WPObject *CLASS;
      typedef CLASS      *PCLASS;
      typedef LHANDLE     HFIND;
      typedef HFIND      *PHFIND;

      /* wpDrop method return code  */

      #define RC_DROP_DROPCOMPLETE 2
      #define RC_DROP_ITEMCOMPLETE 1
      #define RC_DROP_RENDERING    0
      #define RC_DROP_ERROR       -1

      /*handle for files being tracked by the shell */

      typedef LHANDLE HFS;
      #define MAXSZHFS 10       /* size of the translated string */

      #define SETTINGS_PAGE_REMOVED  -1

    /* wpSetConcurrentView values */
      #define CCVIEW_DEFAULT 0
      #define CCVIEW_ON      1
      #define CCVIEW_OFF     2

    /* wpSetMinWindow values */
      #define MINWIN_DEFAULT 0
      #define MINWIN_HIDDEN  1
      #define MINWIN_VIEWER  2
      #define MINWIN_DESKTOP 3

    /* wpSetButtonAppearance values */
      #define HIDEBUTTON      1
      #define MINBUTTON      2
      #define DEFAULTBUTTON  3

      #define  HIDDENMINWINDOW_DEFAULT MINWIN_VIEWER

      typedef struct _TASKREC
      {
         struct _TASKREC *next;     /* next in the list of current tasks   */
         ULONG            useCount; /* can be referenced by multiple object*/
         PVOID            pStdDlg;  /* ptr to standard WP task dialog      */
         WPFolder        *folder;   /* intended folder for the object      */
         LONG             xOrigin;  /* intended position for the object    */
         LONG             yOrigin;  /* intended position for the object    */
         PSZ              pszTitle; /* intended name for the object        */
         ULONG            cbTitle;  /* length of the name buffer           */
         PMINIRECORDCORE  positionAfterRecord; /* intended sort position   */
         BOOL            fKeepAssociations;
         PVOID            pReserved;    /* reserved - equal null           */

      }  TASKREC;
      typedef TASKREC *PTASKREC;

      typedef struct _OBJDETAILS
      {
        PSZ    ObjTitle;
        ULONG  ObjStyle;
        PSZ    ObjClass;
      } OBJDETAILS;
      typedef OBJDETAILS *POBJDETAILS;

#define VIEW_CONTENTS      0x00000001
#define VIEW_SETTINGS      0x00000002
#define VIEW_HELP          0x00000004
#define VIEW_RUNNING       0x00000008
#define VIEW_DETAILS       0x00000010
#define VIEW_TREE          0x00000020
#define VIEW_ANY           0xFFFFFFFF  /* Special case - will find any ViewItem */

/*
 * Passthru some stuff to the .h file
 */

#include <somobj.hh>
#pragma SOMNonDTS(on)

#pragma SOMAsDefault(on)
class WPObject : public SOMObject {

        #pragma SOMClassName(*, "WPObject")
        #pragma SOMNoMangling(*)
        #pragma SOMNonDTS(*)

     #pragma SOMClassName (WPObject, "WPObject")
     #pragma SOMMetaClass (WPObject, M_WPObject)
     #pragma SOMClassVersion (WPObject, 1, 2)
     #pragma SOMCallstyle (oidl)
     #pragma SOMAsDefault(off)
     #pragma SOMAsDefault(pop)
  public :
     virtual ULONG wpAddObjectGeneralPage(HWND hwndNotebook);
     virtual ULONG wpAddObjectGeneralPage2(HWND hwndNotebook);
     virtual ULONG wpAddObjectWindowPage(HWND hwndNotebook);
     virtual BOOL wpAddSettingsPages(HWND hwndNotebook);
     virtual BOOL wpAddToObjUseList(PUSEITEM pUseItem);
     virtual PBYTE wpAllocMem(ULONG cbBytes, PULONG prc);
     virtual BOOL32 wpAppendObject(WPObject* targetObject, BOOL32 fMove);
     virtual BOOL wpAssertObjectMutexSem();
     virtual BOOL wpClose();
     virtual PMINIRECORDCORE wpCnrInsertObject(HWND hwndCnr,
                                               PPOINTL pptlIcon,
                                               PMINIRECORDCORE preccParent,
                                               PRECORDINSERT pRecInsert);
     virtual BOOL wpCnrRemoveObject(HWND hwndCnr);
     virtual BOOL wpCnrSetEmphasis(ULONG ulEmphasisAttr, BOOL fTurnOn);
     virtual ULONG wpConfirmDelete(ULONG fConfirmations);
     virtual ULONG wpConfirmObjectTitle(WPFolder* Folder, WPObject** ppDuplicate,
                                        PSZ pszTitle, ULONG cbTitle,
                                        ULONG menuID);
     virtual void wpCopiedFromTemplate();
     virtual WPObject* wpCopyObject(WPFolder* Folder, BOOL fLock);
     virtual WPObject* wpCreateAnother(PSZ pszTitle, PSZ pszSetupEnv,
                                       WPFolder* Folder);
     virtual WPObject* wpCreateFromTemplate(WPFolder* folder,
                                            BOOL fLock);
     virtual WPObject* wpCreateShadowObject(WPFolder* Folder,
                                            BOOL fLock);
     virtual ULONG wpDelete(ULONG fConfirmations);
     virtual BOOL wpDeleteFromObjUseList(PUSEITEM pUseItem);
     virtual BOOL wpDisplayHelp(ULONG HelpPanelId, PSZ HelpLibrary);
     virtual HWND wpDisplayMenu(HWND hwndOwner, HWND hwndClient,
                                POINTL* ptlPopupPt, ULONG ulMenuType,
                                ULONG ulReserved);
     virtual BOOL wpDoesObjectMatch(PVOID pvoidExtendedCriteria);
     virtual MRESULT wpDraggedOverObject(WPObject* DraggedOverObject);
     virtual MRESULT wpDragOver(HWND hwndCnr, PDRAGINFO pdrgInfo);
     virtual MRESULT wpDrop(HWND hwndCnr, PDRAGINFO pdrgInfo,
                            PDRAGITEM pdrgItem);
     virtual BOOL wpDroppedOnObject(WPObject* DroppedOnObject);
     virtual MRESULT wpEndConversation(ULONG ulItemID, ULONG flResult);
     virtual ULONG wpFilterPopupMenu(ULONG ulFlags, HWND hwndCnr,
                                     BOOL fMultiSelect);
     virtual PUSEITEM wpFindUseItem(ULONG type, PUSEITEM pCurrentItem);
     virtual BOOL wpFormatDragItem(PDRAGITEM pdrgItem);
     virtual BOOL wpFree();
     virtual BOOL wpFreeMem(PBYTE pByte);
     virtual BOOL wpHide();
     virtual void wpInitData();
     virtual BOOL wpInsertPopupMenuItems(HWND hwndMenu, ULONG iPosition,
                                         HMODULE hmod, ULONG MenuID,
                                         ULONG SubMenuID);
     virtual ULONG wpInsertSettingsPage(HWND hwndNotebook, PPAGEINFO ppageinfo);
     virtual BOOL wpMenuItemHelpSelected(ULONG MenuId);
     virtual BOOL wpMenuItemSelected(HWND hwndFrame, ULONG ulMenuId);
     virtual BOOL wpModifyPopupMenu(HWND hwndMenu, HWND hwndCnr,
                                    ULONG iPosition);
     virtual BOOL wpMoveObject(WPFolder* Folder);
     virtual HWND wpOpen(HWND hwndCnr, ULONG ulView, ULONG param);
     virtual BOOL wpPrintObject(PPRINTDEST pPrintDest, ULONG ulReserved);
     virtual ULONG wpQueryConcurrentView();
     virtual ULONG wpQueryButtonAppearance();
     virtual ULONG wpQueryConfirmations();
     virtual BOOL wpQueryDefaultHelp(PULONG pHelpPanelId, PSZ HelpLibrary);
     virtual ULONG wpQueryDefaultView();
     virtual ULONG wpQueryDetailsData(PVOID* ppDetailsData, PULONG pcp);
     virtual ULONG wpQueryError();
     virtual BOOL wpSetFolder(WPObject* container);
     virtual WPObject* wpQueryFolder();
     virtual HPOINTER wpQueryIcon();
     virtual ULONG wpQueryIconData(PICONINFO pIconInfo);
     virtual ULONG wpQueryMinWindow();
     virtual ULONG wpQueryNameClashOptions(ULONG menuID);
     virtual ULONG wpQueryStyle();
     virtual BOOL32 wpSetTaskRec(PTASKREC pNew, PTASKREC pOld);
     virtual PTASKREC wpFindTaskRec();
     virtual PSZ wpQueryTitle();
     virtual BOOL wpRegisterView(HWND hwndFrame, PSZ pszViewTitle);
     virtual ULONG wpReleaseObjectMutexSem();
     virtual MRESULT wpRender(PDRAGTRANSFER pdxfer);
     virtual MRESULT wpRenderComplete(PDRAGTRANSFER pdxfer, ULONG ulResult);
     virtual BOOL32 wpReplaceObject(WPObject* targetObject, BOOL32 fMove);
     virtual ULONG wpRequestObjectMutexSem(ULONG ulTimeout);
     virtual BOOL wpRestore();
     virtual BOOL wpRestoreData(PSZ pszClass, ULONG ulKey, PBYTE pValue,
                                PULONG pcbValue);
     virtual BOOL wpRestoreLong(PSZ pszClass, ULONG ulKey, PULONG pulValue);
     virtual BOOL wpRestoreState(ULONG ulReserved);
     virtual BOOL wpRestoreString(PSZ pszClass, ULONG ulKey,
                                  PSZ pszValue, PULONG pcbValue);
     virtual BOOL wpSaveData(PSZ pszClass, ULONG ulKey, PBYTE pValue,
                             ULONG cbValue);
     virtual BOOL wpSaveImmediate();
     virtual BOOL wpSaveDeferred();
     virtual BOOL wpSaveLong(PSZ pszClass, ULONG ulKey, ULONG ulValue);
     virtual BOOL wpSaveState();
     virtual BOOL wpSaveString(PSZ pszClass, ULONG ulKey, PSZ pszValue);
     virtual BOOL wpScanSetupString(PSZ pszSetupString, PSZ pszKey,
                                    PSZ pszValue, PULONG pcbValue);
     virtual void wpSetConcurrentView(ULONG ulCCView);
     virtual void wpSetButtonAppearance(ULONG ulButtonType);
     virtual BOOL wpSetDefaultHelp(ULONG HelpPanelId, PSZ HelpLibrary);
     virtual BOOL wpSetDefaultView(ULONG ulView);
     virtual BOOL wpSetError(ULONG ulErrorId);
     virtual BOOL wpSetIconHandle(HPOINTER hptrNewIcon);
     virtual USHORT wpQueryScreenGroupID(USHORT usPrevSgId);
     virtual BOOL wpSetupOnce(PSZ pszSetupString);
     virtual BOOL wpSetIcon(HPOINTER hptrNewIcon);
     virtual BOOL wpSetIconData(PICONINFO pIconInfo);
     virtual void wpSetMinWindow(ULONG ulMinWindow);
     virtual BOOL wpSetStyle(ULONG ulNewStyle);
     virtual BOOL wpModifyStyle(ULONG ulStyleFlags, ULONG ulStyleMask);
     virtual BOOL wpSetTitle(PSZ pszNewTitle);
     virtual BOOL wpSetup(PSZ pszSetupString);
     virtual BOOL wpSwitchTo(ULONG View);
     virtual void wpUnInitData();
     virtual HWND wpViewObject(HWND hwndCnr, ULONG ulView, ULONG param);
     virtual ULONG wpQueryTrueStyle();
     virtual HOBJECT wpQueryHandle();
     virtual BOOL wpUnlockObject();
     virtual void wpObjectReady(ULONG ulCode, WPObject* refObject);
     virtual BOOL wpIsObjectInitialized();
     virtual WPObject* wpCreateShadowObjectExt(WPFolder* Folder,
                                               BOOL fLock, PSZ pszSetup,
                                               M_WPObject* shadowClass);
     virtual BOOL wpCnrDeleteUseItem(HWND hwndCnr);
     virtual BOOL wpIsDeleteable();
     virtual PMINIRECORDCORE wpQueryCoreRecord();
     virtual BOOL wpSetObjectID(PSZ pszObjectID);
     virtual PSZ wpQueryObjectID();
     virtual BOOL wpSetDefaultIconPos(PPOINTL pPointl);
     virtual BOOL wpQueryDefaultIconPos(PPOINTL pPointl);
     virtual void wpCnrRefreshDetails();
     virtual PVIEWITEM wpFindViewItem(ULONG flViews, PVIEWITEM pCurrentItem);
     virtual void wpLockObject();
     virtual BOOL wpIsLocked();
     virtual PULONG wpQueryContainerFlagPtr();
     virtual ULONG wpWaitForClose(LHANDLE lhView, ULONG ulViews,
                                  long lTimeOut, BOOL bAutoClose);
     WPObject();
     virtual ~WPObject();
     #pragma SOMReleaseOrder ( \
                              "wpSetTitle", \
                              "wpQueryTitle", \
                              "wpSetStyle", \
                              "wpQueryStyle", \
                              "wpSetIcon", \
                              "wpQueryIcon", \
                              "wpSetFolder", \
                              "wpQueryFolder", \
                              *, \
                              *, \
                              "wpSetDefaultView", \
                              "wpQueryDefaultView", \
                              *, \
                              "wpSaveState", \
                              *, \
                              *, \
                              "wpSaveLong", \
                              "wpSaveString", \
                              "wpSaveData", \
                              *, \
                              "wpRestoreState", \
                              *, \
                              *, \
                              "wpRestoreLong", \
                              "wpRestoreString", \
                              "wpRestoreData", \
                              *, \
                              "wpAllocMem", \
                              "wpFreeMem", \
                              "wpAddToObjUseList", \
                              "wpDeleteFromObjUseList", \
                              "wpFindUseItem", \
                              "wpSwitchTo", \
                              *, \
                              "wpFilterPopupMenu", \
                              "wpModifyPopupMenu", \
                              "wpMenuItemSelected", \
                              "wpFormatDragItem", \
                              "wpDrop", \
                              "wpDragOver", \
                              "wpRender", \
                              "wpEndConversation", \
                              *, \
                              *, \
                              *, \
                              "wpFree", \
                              "wpCopiedFromTemplate", \
                              "wpAddSettingsPages", \
                              "wpAddObjectGeneralPage", \
                              "wpDisplayHelp", \
                              "wpMenuItemHelpSelected", \
                              "wpInsertSettingsPage", \
                              "wpInsertPopupMenuItems", \
                              *, \
                              *, \
                              *, \
                              *, \
                              "wpCnrInsertObject", \
                              "wpCnrRemoveObject", \
                              "wpInitData", \
                              "wpUnInitData", \
                              "wpSetup", \
                              "wpScanSetupString", \
                              "wpSaveImmediate", \
                              "wpOpen", \
                              "wpClose", \
                              "wpHide", \
                              "wpRestore", \
                              "wpSetIconData", \
                              "wpQueryIconData", \
                              *, \
                              "wpDelete", \
                              "wpConfirmDelete", \
                              *, \
                              *, \
                              *, \
                              "wpRegisterView", \
                              *, \
                              "wpSetDefaultHelp", \
                              "wpQueryDefaultHelp", \
                              "wpDoesObjectMatch", \
                              "wpCnrRefreshDetails", \
                              "wpSetError", \
                              "wpQueryError", \
                              "wpDraggedOverObject", \
                              "wpDroppedOnObject", \
                              "wpSetDefaultIconPos", \
                              "wpQueryDefaultIconPos", \
                              *, \
                              *, \
                              "wpSetObjectID", \
                              "wpQueryObjectID", \
                              "wpIsDeleteable", \
                              "wpQueryHandle", \
                              "wpSaveDeferred", \
                              "wpAddObjectWindowPage", \
                              "wpQueryConcurrentView", \
                              "wpSetConcurrentView", \
                              "wpQueryMinWindow", \
                              "wpSetMinWindow", \
                              "wpViewObject", \
                              "wpQueryButtonAppearance", \
                              "wpSetButtonAppearance", \
                              "wpQueryConfirmations", \
                              "wpCnrSetEmphasis", \
                              "wpQueryCoreRecord", \
                              "wpFindViewItem", \
                              "wpCreateFromTemplate", \
                              "wpQueryTrueStyle", \
                              "wpAssertObjectMutexSem", \
                              "wpReleaseObjectMutexSem", \
                              "wpRequestObjectMutexSem", \
                              "wpCreateAnother", \
                              "wpCreateShadowObject", \
                              "wpCopyObject", \
                              "wpMoveObject", \
                              "wpLockObject", \
                              "wpUnlockObject", \
                              "wpIsLocked", \
                              "wpRenderComplete", \
                              "wpQueryDetailsData", \
                              "wpPrintObject", \
                              *, \
                              "wpSetTaskRec", \
                              *, \
                              "wpModifyStyle", \
                              *, \
                              "wpFindTaskRec", \
                              "wpAppendObject", \
                              "wpReplaceObject", \
                              "wpQueryNameClashOptions", \
                              "wpConfirmObjectTitle", \
                              *, \
                              "wpQueryContainerFlagPtr", \
                              *, \
                              *, \
                              *, \
                              "wpCnrDeleteUseItem", \
                              "wpObjectReady", \
                              "wpIsObjectInitialized", \
                              "wpCreateShadowObjectExt", \
                              "wpSetIconHandle", \
                              *, \
                              *, \
                              "wpDisplayMenu", \
                              "wpWaitForClose", \
                              "wpQueryScreenGroupID", \
                              "wpSetupOnce", \
                              "wpAddObjectGeneralPage2", \
                              *, \
                              *)
};
#pragma SOMAsDefault(pop)

     #pragma SOMNonDTS(pop)
/* End WPObject */
/* Start Class M_WPObject */

#include <somcls.hh>
#include <somcls.hh>
#pragma SOMNonDTS(on)

#pragma SOMAsDefault(on)
class M_WPObject : public SOMClass {

        #pragma SOMClassName(*, "M_WPObject")
        #pragma SOMNoMangling(*)
        #pragma SOMNonDTS(*)

     #pragma SOMClassVersion (M_WPObject, 1, 2)
     #pragma SOMCallstyle (oidl)
     #pragma SOMAsDefault(off)
     #pragma SOMAsDefault(pop)
  public :
     virtual BOOL wpclsCreateDefaultTemplates(WPObject* Folder);
     virtual void wpclsInitData();
     virtual WPObject* wpclsMakeAwake(PSZ pszTitle, ULONG ulStyle,
                                      HPOINTER hptrIcon, POBJDATA pObjData,
                                      WPFolder* Folder, ULONG ulUser);
     virtual WPObject* wpclsNew(PSZ pszTitle, PSZ pszSetupEnv,
                                WPFolder* Folder, BOOL fLock);
     virtual BOOL wpclsQueryDefaultHelp(PULONG pHelpPanelId,
                                        PSZ pszHelpLibrary);
     virtual ULONG wpclsQueryDefaultView();
     virtual PCLASSDETAILS wpclsQueryDetails();
     virtual ULONG wpclsQueryDetailsInfo(PCLASSFIELDINFO* ppClassFieldInfo,
                                         PULONG pSize);
     virtual BOOL wpclsQueryExtendedCriteria(PSZ pszName, ULONG ulSearchType,
                                             PVOID pvoidExtendedCriteria);
     virtual WPObject* wpclsQueryFolder(PSZ pszLocation, BOOL fLock);
     virtual HPOINTER wpclsQueryIcon();
     virtual void wpclsQuerySearchInfo(M_WPObject** ClassExtended,
                                       M_WPObject** ClassCreate,
                                       PULONG pulClassCriteriaSize);
     virtual ULONG wpclsQueryStyle();
     virtual PSZ wpclsQueryTitle();
     virtual void wpclsUnInitData();
     virtual BOOL wpclsFindObjectFirst(PCLASS pClassList, PHFIND phFind,
                                       PSZ pszTitle, WPFolder* Folder,
                                       BOOL fSubfolders, PVOID pExtendedCriteria,
                                       POBJECT pBuffer, PULONG pCount);
     virtual BOOL wpclsFindObjectNext(HFIND hFind, POBJECT pBuffer,
                                      PULONG pCount);
     virtual BOOL wpclsFindObjectEnd(HFIND hFind);
     virtual BOOL wpclsSetError(ULONG ulErrorId);
     virtual ULONG wpclsQueryError();
     virtual BOOL wpclsQuerySettingsPageSize(PSIZEL pSizl);
     virtual ULONG wpclsQueryIconData(PICONINFO pIconInfo);
     virtual WPObject* wpclsQueryObject(HOBJECT hObject);
     virtual ULONG wpclsQueryButtonAppearance();
     virtual void wpclsDecUsage();
     virtual void wpclsIncUsage();
     virtual BOOL wpclsInsertMultipleObjects(HWND hwndCnr, PPOINTL pptlIcon,
                                             PVOID* pObjectArray,
                                             PVOID pRecordParent,
                                             ULONG NumRecords);
     virtual WPObject* wpclsFindOneObject(HWND hwndOwner, PSZ pszFindParams);
     virtual BOOL wpclsSetSettingsPageSize(PSIZEL pSizl);
     virtual BOOL wpclsSetIconData(PICONINFO pIconInfo);
     virtual BOOL wpclsSetIcon(HPOINTER hptrNewIcon);
     virtual WPObject* wpclsObjectFromHandle(HOBJECT hObject);
     virtual BOOL wpclsRemoveObjects(HWND hwndCnr, PVOID* pRecordArray,
                                     ULONG NumRecords, BOOL RemoveAll);
     virtual ~M_WPObject();
     virtual void somClassReady();
     virtual SOMObject* somNew();
     virtual SOMObject* somRenew(void* obj);
     #pragma SOMReleaseOrder ( \
                              "wpclsInitData", \
                              "wpclsUnInitData", \
                              *, \
                              "wpclsMakeAwake", \
                              "wpclsIncUsage", \
                              "wpclsDecUsage", \
                              "wpclsQueryTitle", \
                              "wpclsQueryIcon", \
                              "wpclsQueryDefaultHelp", \
                              "wpclsQueryStyle", \
                              "wpclsQueryDetailsInfo", \
                              "wpclsQueryDefaultView", \
                              "wpclsQueryDetails", \
                              "wpclsQuerySearchInfo", \
                              "wpclsQueryExtendedCriteria", \
                              "wpclsCreateDefaultTemplates", \
                              *, \
                              "wpclsFindObjectFirst", \
                              "wpclsFindObjectNext", \
                              "wpclsFindObjectEnd", \
                              *, \
                              "wpclsSetError", \
                              "wpclsQueryError", \
                              "wpclsQuerySettingsPageSize", \
                              "wpclsSetSettingsPageSize", \
                              "wpclsQueryIconData", \
                              "wpclsSetIcon", \
                              "wpclsSetIconData", \
                              "wpclsQueryObject", \
                              "wpclsObjectFromHandle", \
                              *, \
                              *, \
                              *, \
                              *, \
                              *, \
                              "wpclsQueryButtonAppearance", \
                              "wpclsNew", \
                              "wpclsQueryFolder", \
                              *, \
                              *, \
                              "wpclsRemoveObjects", \
                              "wpclsInsertMultipleObjects", \
                              *, \
                              "wpclsFindOneObject", \
                              *)
};
#pragma SOMAsDefault(pop)

     #pragma SOMNonDTS(pop)
/* End M_WPObject */
#endif /* _DTS_HH_INCLUDED_wpobject */
