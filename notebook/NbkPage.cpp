/*******************************************************************************
* FILE NAME: NbkPage.cpp                                                       *
*                                                                              *
* DESCRIPTION:                                                                 *
*   Class implementation of the class:                                         *
*     NbkPage                                                                  *
* ---------------------------------------------------------------------------- *
* Warning: This file was generated by the VisualAge C++ Visual Builder.        *
* Modifications to this source file will be lost when the part is regenerated. *
*******************************************************************************/
#ifndef _IMCELCV_
#include <imcelcv.hpp>
#endif

#ifndef _ISTATTXT_
#include <istattxt.hpp>
#endif

#ifndef _IFONT_
#include <ifont.hpp>
#endif

#ifndef _INOTIFEV_
#include <inotifev.hpp>
#endif

#ifndef _IOBSERVR_
#include <iobservr.hpp>
#endif

#ifndef _ISTDNTFY_
#include <istdntfy.hpp>
#endif

#ifndef _NBKPAGE_
#include "NbkPage.hpp"
#endif

#ifndef _IVBDEFS_
#include <ivbdefs.h>
#endif

#ifndef _ITRACE_
#include <itrace.hpp>
#endif


#pragma export (NbkPage::readyId)
const INotificationId NbkPage::readyId = "NbkPage::readyId";

#pragma export (NbkPage::partWindowId)
unsigned long NbkPage::partWindowId = 0;

//------------------------------------------------------------------------------
// NbkPage :: defaultFramingSpec
//------------------------------------------------------------------------------
#pragma export (NbkPage::defaultFramingSpec())
IRectangle NbkPage::defaultFramingSpec()
{
   return(IRectangle(IPoint(30,557),ISize(190, 125)));
}


//------------------------------------------------------------------------------
// NbkPage :: NbkPage
//------------------------------------------------------------------------------
#pragma export (NbkPage::NbkPage(unsigned long, IWindow *, IWindow *, const IRectangle &, const IMultiCellCanvas::Style &))
NbkPage::NbkPage(
      unsigned long id, 
      IWindow * parent, 
      IWindow * owner, 
      const IRectangle & rect, 
      const IMultiCellCanvas::Style & style)
   : IMultiCellCanvas((partWindowId) ? partWindowId : id, parent, owner, rect, style)
{
   partWindowId = (partWindowId) ? partWindowId : id;
   iStaticText1 = new IStaticText(
      partWindowId+WNDOFFSET_NbkPage_StaticText1, 
      this, 
      this, 
      IRectangle());

   this->addToCell(iStaticText1, 2, 2, 1, 1);
   this->setColumnWidth(2, IMultiCellCanvas::defaultCell().width(), true);
   this->setColumnWidth(3, IMultiCellCanvas::defaultCell().width(), false);
   this->setRowHeight(2, IMultiCellCanvas::defaultCell().height(), true);
   this->setRowHeight(3, IMultiCellCanvas::defaultCell().height(), false);
   iStaticText1->setFont(IFont("Tms Rmn Bold", 24).setBold(false).setItalic(false).setUnderscore(false).setStrikeout(false).setOutline(false));
   iStaticText1->setAlignment(IStaticText::centerCenter);
   iStaticText1->setText("New Page");
}     //end constructor


//------------------------------------------------------------------------------
// NbkPage :: ~NbkPage
//------------------------------------------------------------------------------
#pragma export (NbkPage::~NbkPage())
NbkPage::~NbkPage()
{

   delete iStaticText1;
}

//------------------------------------------------------------------------------
// NbkPage :: initializePart
//------------------------------------------------------------------------------
#pragma export (NbkPage::initializePart())
NbkPage & NbkPage::initializePart()
{
   makeConnections();
   notifyObservers(INotificationEvent(readyId, *this));
   return *this;
}


//------------------------------------------------------------------------------
// NbkPage :: makeConnections
//------------------------------------------------------------------------------
#pragma export (NbkPage::makeConnections())
Boolean NbkPage::makeConnections()
{
   this->enableNotification();
   iStaticText1->enableNotification();

   return true;
}



