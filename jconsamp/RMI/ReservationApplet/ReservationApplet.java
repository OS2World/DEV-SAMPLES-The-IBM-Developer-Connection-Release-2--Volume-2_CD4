/*
(c) Copyright IBM Corp. 1997  All rights reserved.

These sample programs are owned by International Business Machines
Corporation or one of its subsidiaries ("IBM") and are copyrighted and
licensed, not sold.

You may copy, modify, and distribute these sample programs in any
form without payment to IBM,  for any purpose including developing,
using, marketing or distributing programs that include or are
derivative works of the sample programs.

The sample programs are provided to you on an "AS IS" basis, without
warranty of any kind.  IBM HEREBY EXPRESSLY DISCLAIMS ALL WARRANTIES,
EITHER EXPRESS OR IMPLIED, INCLUDING , BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
Some jurisdictions do not allow for the exclusion or limitation of
implied warranties, so the above limitations or exclusions may not
apply to you.  IBM shall not be liable for any damages you suffer
as a result of using, modifying or distributing the sample programs
or their derivatives.

Each copy of any portion of this/these sample program(s) or any
derivative work, must include a the above copyright notice and warranty.
*/



import com.ibm.sdm.hotel.* ;

import java.applet.*;
import java.awt.*;
import java.rmi.* ;
/**
 * This applet was generated by a SmartGuide.
 * 
 */
public class ReservationApplet extends Applet implements java.awt.event.ActionListener {
	private Button ivjAddButton = null;
	private Label ivjAddress1Label = null;
	private TextField ivjAddress1TF = null;
	private Label ivjAddress2Label = null;
	private TextField ivjAddress2TF = null;
	private Checkbox ivjAmExCB = null;
	private Label ivjApplicationNameLabel = null;
	private com.ibm.sdm.toolbox.GroupboxPanel ivjCardNumberGBP = null;
	private TextField ivjCardNumberTF = null;
	private CheckboxGroup ivjCardTypeCBGroup = null;
	private com.ibm.sdm.toolbox.GroupboxPanel ivjCardTypeGBP = null;
	private GridLayout ivjCardTypeGBPGridLayout = null;
	private Label ivjCityLabel = null;
	private TextField ivjCityTF = null;
	private com.ibm.sdm.toolbox.GroupboxPanel ivjCustomerInformationGBP = null;
	private CustomerManager ivjCustomerManager = null;
	private Button ivjDeleteButton = null;
	private Checkbox ivjDinersClubCB = null;
	private com.ibm.sdm.toolbox.GroupboxPanel ivjFindCustomerGBP = null;
	private GridLayout ivjFindCustomerGBPGridLayout = null;
	private Label ivjFirstNameLabel = null;
	private TextField ivjFirstNameTF = null;
	private Label ivjHotelNameLabel = null;
	private Label ivjLabel3 = null;
	private Label ivjLabel4 = null;
	private Label ivjLabel5 = null;
	private Label ivjLastNameLabel = null;
	private TextField ivjLastNameTF = null;
	private Checkbox ivjMasterCardCB = null;
	private Label ivjMiddleInitialLabel = null;
	private TextField ivjMiddleInitialTF = null;
	private com.ibm.sdm.toolbox.GroupboxPanel ivjPaymentInformationGBP = null;
	private GridLayout ivjPaymentInformationGBPGridLayout = null;
	private Label ivjPhoneLabel = null;
	private TextField ivjPhoneTF = null;
	private Button ivjSearchButton = null;
	private Label ivjStateLabel = null;
	private TextField ivjStateTF = null;
	private TextField ivjTextField1 = null;
	private Checkbox ivjVisaCB = null;
	private Label ivjZipLabel = null;
	private TextField ivjZipTF = null;

/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if ((e.getSource() == getAddButton()) ) {
		conn20(e);
	}
	if ((e.getSource() == getAddButton()) ) {
		conn24(e);
	}
	if ((e.getSource() == getAddButton()) ) {
		conn25(e);
	}
	if ((e.getSource() == getAddButton()) ) {
		conn5(e);
	}
	if ((e.getSource() == getAddButton()) ) {
		conn21(e);
	}
	if ((e.getSource() == getAddButton()) ) {
		conn22(e);
	}
	if ((e.getSource() == getAddButton()) ) {
		conn23(e);
	}
	if ((e.getSource() == getSearchButton()) ) {
		conn27(e);
	}
	if ((e.getSource() == getSearchButton()) ) {
		conn28(e);
	}
	if ((e.getSource() == getSearchButton()) ) {
		conn29(e);
	}
	if ((e.getSource() == getSearchButton()) ) {
		conn35(e);
	}
	if ((e.getSource() == getSearchButton()) ) {
		conn30(e);
	}
	if ((e.getSource() == getSearchButton()) ) {
		conn31(e);
	}
	if ((e.getSource() == getSearchButton()) ) {
		conn32(e);
	}
	if ((e.getSource() == getDeleteButton()) ) {
		conn33(e);
	}
	if ((e.getSource() == getDeleteButton()) ) {
		conn34(e);
	}
	if ((e.getSource() == getDeleteButton()) ) {
		conn45(e);
	}
	if ((e.getSource() == getDeleteButton()) ) {
		conn16(e);
	}
	if ((e.getSource() == getDeleteButton()) ) {
		conn36(e);
	}
	if ((e.getSource() == getDeleteButton()) ) {
		conn37(e);
	}
	if ((e.getSource() == getDeleteButton()) ) {
		conn38(e);
	}
	if ((e.getSource() == getDeleteButton()) ) {
		conn39(e);
	}
	// user code begin {2}
	// user code end
}

/**
 * This method was created by a SmartGuide.
 */
public void clearTextFields() {
		 ivjFirstNameTF.setText("") ;
		 ivjMiddleInitialTF.setText("") ;
		 ivjLastNameTF.setText("") ;
		 ivjAddress1TF.setText("") ;
		 ivjAddress2TF.setText("") ;
		 ivjCityTF.setText("") ;
		 ivjStateTF.setText("") ;
		 ivjZipTF.setText("") ;
		 ivjPhoneTF.setText("") ;
	return;
}
/**
 * conn0SetTarget:  (CardTypeCBGroup.this <--> VisaCB.checkboxGroup)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn0SetTarget() {
	/* Set the target from the source */
	try {
		getVisaCB().setCheckboxGroup(getCardTypeCBGroup());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn16:  (DeleteButton.action.actionPerformed(java.awt.event.ActionEvent) --> CustomerManager.deleteCustomerWithId(java.lang.String))
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn16(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getCustomerManager().deleteCustomerWithId(getCardNumberTF().getText());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn19:  (ReservationApplet.this --> ReservationApplet.createCustomerManager()V)
 * @param value java.applet.Applet
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn19(Applet value) {
	try {
		// user code begin {1}
		// user code end
		this.createCustomerManager();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn1SetTarget:  (CardTypeCBGroup.this <--> MasterCardCB.checkboxGroup)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn1SetTarget() {
	/* Set the target from the source */
	try {
		getMasterCardCB().setCheckboxGroup(getCardTypeCBGroup());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn20:  (AddButton.action.actionPerformed(java.awt.event.ActionEvent) --> AddButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn20(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getAddButton().setEnabled(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn21:  (AddButton.action.actionPerformed(java.awt.event.ActionEvent) --> AddButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn21(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getAddButton().setEnabled(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn22:  (AddButton.action.actionPerformed(java.awt.event.ActionEvent) --> DeleteButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn22(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getDeleteButton().setEnabled(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn23:  (AddButton.action.actionPerformed(java.awt.event.ActionEvent) --> SearchButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn23(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSearchButton().setEnabled(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn24:  (AddButton.action.actionPerformed(java.awt.event.ActionEvent) --> DeleteButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn24(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getDeleteButton().setEnabled(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn25:  (AddButton.action.actionPerformed(java.awt.event.ActionEvent) --> SearchButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn25(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSearchButton().setEnabled(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn27:  (SearchButton.action.actionPerformed(java.awt.event.ActionEvent) --> SearchButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn27(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSearchButton().setEnabled(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn28:  (SearchButton.action.actionPerformed(java.awt.event.ActionEvent) --> DeleteButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn28(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getDeleteButton().setEnabled(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn29:  (SearchButton.action.actionPerformed(java.awt.event.ActionEvent) --> AddButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn29(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getAddButton().setEnabled(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn2SetTarget:  (CardTypeCBGroup.this <--> DinersClubCB.checkboxGroup)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn2SetTarget() {
	/* Set the target from the source */
	try {
		getDinersClubCB().setCheckboxGroup(getCardTypeCBGroup());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn30:  (SearchButton.action.actionPerformed(java.awt.event.ActionEvent) --> SearchButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn30(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSearchButton().setEnabled(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn31:  (SearchButton.action.actionPerformed(java.awt.event.ActionEvent) --> DeleteButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn31(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getDeleteButton().setEnabled(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn32:  (SearchButton.action.actionPerformed(java.awt.event.ActionEvent) --> AddButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn32(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getAddButton().setEnabled(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn33:  (DeleteButton.action.actionPerformed(java.awt.event.ActionEvent) --> AddButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn33(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getAddButton().setEnabled(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn34:  (DeleteButton.action.actionPerformed(java.awt.event.ActionEvent) --> DeleteButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn34(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getDeleteButton().setEnabled(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn35:  (SearchButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReservationApplet.getCustomerWithId(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn35(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.getCustomerWithId(getCardNumberTF().getText());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn36:  (DeleteButton.action.actionPerformed(java.awt.event.ActionEvent) --> AddButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn36(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getAddButton().setEnabled(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn37:  (DeleteButton.action.actionPerformed(java.awt.event.ActionEvent) --> DeleteButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn37(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getDeleteButton().setEnabled(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn38:  (DeleteButton.action.actionPerformed(java.awt.event.ActionEvent) --> SearchButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn38(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSearchButton().setEnabled(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn39:  (DeleteButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReservationApplet.clearTextFields()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn39(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.clearTextFields();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn3SetTarget:  (CardTypeCBGroup.this <--> AmExCB.checkboxGroup)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn3SetTarget() {
	/* Set the target from the source */
	try {
		getAmExCB().setCheckboxGroup(getCardTypeCBGroup());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn4:  (ReservationApplet.init() --> ReservationApplet.createCustomerManager()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn4() {
	try {
		// user code begin {1}
		// user code end
		this.createCustomerManager();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn45:  (DeleteButton.action.actionPerformed(java.awt.event.ActionEvent) --> SearchButton.enabled)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn45(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSearchButton().setEnabled(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * conn5:  (AddButton.action.actionPerformed(java.awt.event.ActionEvent) --> CustomerManager.addCustomer(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String))
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getCustomerManager().addCustomer(getCardNumberTF().getText(), getFirstNameTF().getText(), getMiddleInitialTF().getText(), getLastNameTF().getText(), getAddress1TF().getText(), getAddress2TF().getText(), getCityTF().getText(), getStateTF().getText(), getZipTF().getText(), getPhoneTF().getText());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * This method was created by a SmartGuide.
 */
public void createCustomerManager() {
	  
   try{ 
		   String url = new String("//NTSRV:1099/CustomerManager") ;
		   ivjCustomerManager = (CustomerManager)Naming.lookup(url) ;
		   showStatus("Customer Manager found.") ;
	  }
	  catch(Exception exception) {
		   showStatus("Exception occurred while trying to find CustomerManager.") ;
		   System.out.println(exception.toString()) ;
	}	
	return;
}
/**
 * Return the AddButton property value.
 * @return java.awt.Button
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Button getAddButton() {
	if (ivjAddButton == null) {
		try {
			ivjAddButton = new java.awt.Button();
			ivjAddButton.setName("AddButton");
			ivjAddButton.setFont(new java.awt.Font("", 0, 12));
			ivjAddButton.setLabel("Add");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjAddButton;
}

/**
 * Return the Address1Label property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getAddress1Label() {
	if (ivjAddress1Label == null) {
		try {
			ivjAddress1Label = new java.awt.Label();
			ivjAddress1Label.setName("Address1Label");
			ivjAddress1Label.setFont(new java.awt.Font("", 0, 12));
			ivjAddress1Label.setText("Address 1:");
			ivjAddress1Label.setBounds(13, 67, 79, 23);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjAddress1Label;
}

/**
 * Return the Address1TF property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextField getAddress1TF() {
	if (ivjAddress1TF == null) {
		try {
			ivjAddress1TF = new java.awt.TextField();
			ivjAddress1TF.setName("Address1TF");
			ivjAddress1TF.setFont(new java.awt.Font("", 0, 12));
			ivjAddress1TF.setBounds(13, 92, 226, 22);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjAddress1TF;
}

/**
 * Return the Address2Label property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getAddress2Label() {
	if (ivjAddress2Label == null) {
		try {
			ivjAddress2Label = new java.awt.Label();
			ivjAddress2Label.setName("Address2Label");
			ivjAddress2Label.setFont(new java.awt.Font("", 0, 12));
			ivjAddress2Label.setText("Address 2:");
			ivjAddress2Label.setBounds(13, 113, 79, 23);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjAddress2Label;
}

/**
 * Return the Address2TF property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextField getAddress2TF() {
	if (ivjAddress2TF == null) {
		try {
			ivjAddress2TF = new java.awt.TextField();
			ivjAddress2TF.setName("Address2TF");
			ivjAddress2TF.setFont(new java.awt.Font("", 0, 12));
			ivjAddress2TF.setBounds(13, 138, 226, 22);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjAddress2TF;
}

/**
 * Return the AmExCB property value.
 * @return java.awt.Checkbox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Checkbox getAmExCB() {
	if (ivjAmExCB == null) {
		try {
			ivjAmExCB = new java.awt.Checkbox();
			ivjAmExCB.setName("AmExCB");
			ivjAmExCB.setFont(new java.awt.Font("", 0, 12));
			ivjAmExCB.setLabel("AmEx");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjAmExCB;
}

/**
 * Gets the applet information.
 * @return java.lang.String
 */
public String getAppletInfo() {
	return "com.ibm.sdm.hotel.ReservationApplet created using VisualAge for Java.";
}

/**
 * Return the ApplicationNameLabel property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getApplicationNameLabel() {
	if (ivjApplicationNameLabel == null) {
		try {
			ivjApplicationNameLabel = new java.awt.Label();
			ivjApplicationNameLabel.setName("ApplicationNameLabel");
			ivjApplicationNameLabel.setFont(new java.awt.Font("dialog", 3, 20));
			ivjApplicationNameLabel.setText("Hotel Reservations System");
			ivjApplicationNameLabel.setBounds(178, 41, 271, 30);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjApplicationNameLabel;
}

/**
 * Return the CardNumberGBP property value.
 * @return com.ibm.sdm.toolbox.GroupboxPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.ibm.sdm.toolbox.GroupboxPanel getCardNumberGBP() {
	if (ivjCardNumberGBP == null) {
		try {
			ivjCardNumberGBP = new com.ibm.sdm.toolbox.GroupboxPanel();
			ivjCardNumberGBP.setName("CardNumberGBP");
			ivjCardNumberGBP.setLayout(null);
			ivjCardNumberGBP.setLabel("Card Number");
			ivjCardNumberGBP.add(getCardNumberTF(), getCardNumberTF().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjCardNumberGBP;
}

/**
 * Return the CardNumberTF property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextField getCardNumberTF() {
	if (ivjCardNumberTF == null) {
		try {
			ivjCardNumberTF = new java.awt.TextField();
			ivjCardNumberTF.setName("CardNumberTF");
			ivjCardNumberTF.setFont(new java.awt.Font("", 0, 12));
			ivjCardNumberTF.setBounds(15, 44, 188, 23);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjCardNumberTF;
}

/**
 * Return the CardTypeCBGroup property value.
 * @return java.awt.CheckboxGroup
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private CheckboxGroup getCardTypeCBGroup() {
	if (ivjCardTypeCBGroup == null) {
		try {
			ivjCardTypeCBGroup = new java.awt.CheckboxGroup();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjCardTypeCBGroup;
}

/**
 * Return the CardTypeGBP property value.
 * @return com.ibm.sdm.toolbox.GroupboxPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.ibm.sdm.toolbox.GroupboxPanel getCardTypeGBP() {
	if (ivjCardTypeGBP == null) {
		try {
			ivjCardTypeGBP = new com.ibm.sdm.toolbox.GroupboxPanel();
			ivjCardTypeGBP.setName("CardTypeGBP");
			ivjCardTypeGBP.setLayout(getCardTypeGBPGridLayout());
			ivjCardTypeGBP.setLabel("Card Type");
			ivjCardTypeGBP.add(getVisaCB(), getVisaCB().getName());
			ivjCardTypeGBP.add(getMasterCardCB(), getMasterCardCB().getName());
			ivjCardTypeGBP.add(getDinersClubCB(), getDinersClubCB().getName());
			ivjCardTypeGBP.add(getAmExCB(), getAmExCB().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjCardTypeGBP;
}

/**
 * Return the CardTypeGBPGridLayout property value.
 * @return java.awt.GridLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private GridLayout getCardTypeGBPGridLayout() {
	java.awt.GridLayout ivjCardTypeGBPGridLayout = null;
	try {
		/* Create part */
		ivjCardTypeGBPGridLayout = new java.awt.GridLayout(2, 2);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjCardTypeGBPGridLayout;
}

/**
 * Return the CityLabel property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getCityLabel() {
	if (ivjCityLabel == null) {
		try {
			ivjCityLabel = new java.awt.Label();
			ivjCityLabel.setName("CityLabel");
			ivjCityLabel.setFont(new java.awt.Font("", 0, 12));
			ivjCityLabel.setText("City:");
			ivjCityLabel.setBounds(13, 159, 48, 23);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjCityLabel;
}

/**
 * Return the CityTF property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextField getCityTF() {
	if (ivjCityTF == null) {
		try {
			ivjCityTF = new java.awt.TextField();
			ivjCityTF.setName("CityTF");
			ivjCityTF.setFont(new java.awt.Font("", 0, 12));
			ivjCityTF.setBounds(13, 183, 93, 22);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjCityTF;
}

/**
 * Return the CustomerInformationGBP property value.
 * @return com.ibm.sdm.toolbox.GroupboxPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.ibm.sdm.toolbox.GroupboxPanel getCustomerInformationGBP() {
	if (ivjCustomerInformationGBP == null) {
		try {
			ivjCustomerInformationGBP = new com.ibm.sdm.toolbox.GroupboxPanel();
			ivjCustomerInformationGBP.setName("CustomerInformationGBP");
			ivjCustomerInformationGBP.setLayout(null);
			ivjCustomerInformationGBP.setBounds(13, 86, 257, 273);
			ivjCustomerInformationGBP.setLabel("Customer Information");
			ivjCustomerInformationGBP.add(getFirstNameLabel(), getFirstNameLabel().getName());
			ivjCustomerInformationGBP.add(getFirstNameTF(), getFirstNameTF().getName());
			ivjCustomerInformationGBP.add(getMiddleInitialLabel(), getMiddleInitialLabel().getName());
			ivjCustomerInformationGBP.add(getMiddleInitialTF(), getMiddleInitialTF().getName());
			ivjCustomerInformationGBP.add(getLastNameLabel(), getLastNameLabel().getName());
			ivjCustomerInformationGBP.add(getLastNameTF(), getLastNameTF().getName());
			ivjCustomerInformationGBP.add(getAddress1Label(), getAddress1Label().getName());
			ivjCustomerInformationGBP.add(getAddress1TF(), getAddress1TF().getName());
			ivjCustomerInformationGBP.add(getAddress2Label(), getAddress2Label().getName());
			ivjCustomerInformationGBP.add(getAddress2TF(), getAddress2TF().getName());
			ivjCustomerInformationGBP.add(getCityLabel(), getCityLabel().getName());
			ivjCustomerInformationGBP.add(getStateLabel(), getStateLabel().getName());
			ivjCustomerInformationGBP.add(getZipLabel(), getZipLabel().getName());
			ivjCustomerInformationGBP.add(getCityTF(), getCityTF().getName());
			ivjCustomerInformationGBP.add(getStateTF(), getStateTF().getName());
			ivjCustomerInformationGBP.add(getZipTF(), getZipTF().getName());
			ivjCustomerInformationGBP.add(getPhoneLabel(), getPhoneLabel().getName());
			ivjCustomerInformationGBP.add(getPhoneTF(), getPhoneTF().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjCustomerInformationGBP;
}

/**
 * Return the CustomerManager property value.
 * @return com.ibm.sdm.hotel.CustomerManager
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private CustomerManager getCustomerManager() {
	// user code begin {1}
	// user code end
	return ivjCustomerManager;
}

/**
 * This method was created by a SmartGuide.
 * @param id java.lang.String
 */
public void getCustomerWithId(String anId) {
	 long id = Long.parseLong(anId) ;	
   try{
	   Customer customer = ivjCustomerManager.getCustomerWithId(id) ;
	   if(customer != null) {
	    showStatus("Customer found.") ;
		 ivjFirstNameTF.setText(customer.getFirstName()) ;
		 //ivjMiddleInitialTF.setText(customer.getMiddleInitial()) ;
		 ivjLastNameTF.setText(customer.getLastName()) ;
		 ivjAddress1TF.setText(customer.getAddress1()) ;
		 ivjAddress2TF.setText(customer.getAddress2()) ;
		 ivjCityTF.setText(customer.getCity()) ;
		 ivjStateTF.setText(customer.getState()) ;
		 ivjZipTF.setText(customer.getZip()) ;
		 ivjPhoneTF.setText(customer.getPhone()) ;
		}
	   else{
		 showStatus("Customer not found.") ;
		 clearTextFields() ; 
	   }		
	}
   catch(Exception exception){
	   System.out.println(exception.toString()) ;
	  }	
	
   return;
}
/**
 * Return the DeleteButton property value.
 * @return java.awt.Button
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Button getDeleteButton() {
	if (ivjDeleteButton == null) {
		try {
			ivjDeleteButton = new java.awt.Button();
			ivjDeleteButton.setName("DeleteButton");
			ivjDeleteButton.setFont(new java.awt.Font("", 0, 12));
			ivjDeleteButton.setLabel("Delete");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjDeleteButton;
}

/**
 * Return the DinersClubCB property value.
 * @return java.awt.Checkbox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Checkbox getDinersClubCB() {
	if (ivjDinersClubCB == null) {
		try {
			ivjDinersClubCB = new java.awt.Checkbox();
			ivjDinersClubCB.setName("DinersClubCB");
			ivjDinersClubCB.setFont(new java.awt.Font("", 0, 12));
			ivjDinersClubCB.setLabel("Diners Club");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjDinersClubCB;
}

/**
 * Return the FindCustomerGBP property value.
 * @return com.ibm.sdm.toolbox.GroupboxPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.ibm.sdm.toolbox.GroupboxPanel getFindCustomerGBP() {
	if (ivjFindCustomerGBP == null) {
		try {
			ivjFindCustomerGBP = new com.ibm.sdm.toolbox.GroupboxPanel();
			ivjFindCustomerGBP.setName("FindCustomerGBP");
			ivjFindCustomerGBP.setLayout(getFindCustomerGBPGridLayout());
			ivjFindCustomerGBP.setBounds(531, 86, 93, 273);
			ivjFindCustomerGBP.setLabel("Actions");
			ivjFindCustomerGBP.add(getAddButton(), getAddButton().getName());
			ivjFindCustomerGBP.add(getDeleteButton(), getDeleteButton().getName());
			ivjFindCustomerGBP.add(getSearchButton(), getSearchButton().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjFindCustomerGBP;
}

/**
 * Return the FindCustomerGBPGridLayout property value.
 * @return java.awt.GridLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private GridLayout getFindCustomerGBPGridLayout() {
	java.awt.GridLayout ivjFindCustomerGBPGridLayout = null;
	try {
		/* Create part */
		ivjFindCustomerGBPGridLayout = new java.awt.GridLayout(3, 1);
		ivjFindCustomerGBPGridLayout.setVgap(8);
		ivjFindCustomerGBPGridLayout.setHgap(8);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjFindCustomerGBPGridLayout;
}

/**
 * Return the FirstNameLabel property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getFirstNameLabel() {
	if (ivjFirstNameLabel == null) {
		try {
			ivjFirstNameLabel = new java.awt.Label();
			ivjFirstNameLabel.setName("FirstNameLabel");
			ivjFirstNameLabel.setFont(new java.awt.Font("", 0, 12));
			ivjFirstNameLabel.setText("First Name:");
			ivjFirstNameLabel.setBounds(13, 21, 68, 23);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjFirstNameLabel;
}

/**
 * Return the FirstNameTF property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextField getFirstNameTF() {
	if (ivjFirstNameTF == null) {
		try {
			ivjFirstNameTF = new java.awt.TextField();
			ivjFirstNameTF.setName("FirstNameTF");
			ivjFirstNameTF.setFont(new java.awt.Font("", 0, 12));
			ivjFirstNameTF.setBounds(13, 45, 93, 22);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjFirstNameTF;
}

/**
 * Return the HotelNameLabel property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getHotelNameLabel() {
	if (ivjHotelNameLabel == null) {
		try {
			ivjHotelNameLabel = new java.awt.Label();
			ivjHotelNameLabel.setName("HotelNameLabel");
			ivjHotelNameLabel.setFont(new java.awt.Font("dialog", 1, 30));
			ivjHotelNameLabel.setText("Sleepy Inn  ");
			ivjHotelNameLabel.setBounds(14, 32, 161, 40);
			ivjHotelNameLabel.setForeground(java.awt.Color.blue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjHotelNameLabel;
}

/**
 * Return the Label3 property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getLabel3() {
	if (ivjLabel3 == null) {
		try {
			ivjLabel3 = new java.awt.Label();
			ivjLabel3.setName("Label3");
			ivjLabel3.setText("1001 Sleepy Lane");
			ivjLabel3.setBounds(463, 1, 125, 30);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjLabel3;
}

/**
 * Return the Label4 property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getLabel4() {
	if (ivjLabel4 == null) {
		try {
			ivjLabel4 = new java.awt.Label();
			ivjLabel4.setName("Label4");
			ivjLabel4.setText("Lake Kiowa, Texas  76240");
			ivjLabel4.setBounds(463, 23, 152, 28);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjLabel4;
}

/**
 * Return the Label5 property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getLabel5() {
	if (ivjLabel5 == null) {
		try {
			ivjLabel5 = new java.awt.Label();
			ivjLabel5.setName("Label5");
			ivjLabel5.setText("1-800-000-0000");
			ivjLabel5.setBounds(463, 42, 125, 30);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjLabel5;
}

/**
 * Return the LastNameLabel property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getLastNameLabel() {
	if (ivjLastNameLabel == null) {
		try {
			ivjLastNameLabel = new java.awt.Label();
			ivjLastNameLabel.setName("LastNameLabel");
			ivjLastNameLabel.setFont(new java.awt.Font("", 0, 12));
			ivjLastNameLabel.setText("Last Name:");
			ivjLastNameLabel.setBounds(148, 21, 68, 23);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjLastNameLabel;
}

/**
 * Return the LastNameTF property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextField getLastNameTF() {
	if (ivjLastNameTF == null) {
		try {
			ivjLastNameTF = new java.awt.TextField();
			ivjLastNameTF.setName("LastNameTF");
			ivjLastNameTF.setFont(new java.awt.Font("", 0, 12));
			ivjLastNameTF.setBounds(148, 45, 93, 22);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjLastNameTF;
}

/**
 * Return the MasterCardCB property value.
 * @return java.awt.Checkbox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Checkbox getMasterCardCB() {
	if (ivjMasterCardCB == null) {
		try {
			ivjMasterCardCB = new java.awt.Checkbox();
			ivjMasterCardCB.setName("MasterCardCB");
			ivjMasterCardCB.setFont(new java.awt.Font("", 0, 12));
			ivjMasterCardCB.setLabel("MasterCard");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjMasterCardCB;
}

/**
 * Return the MiddleInitialLabel property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getMiddleInitialLabel() {
	if (ivjMiddleInitialLabel == null) {
		try {
			ivjMiddleInitialLabel = new java.awt.Label();
			ivjMiddleInitialLabel.setName("MiddleInitialLabel");
			ivjMiddleInitialLabel.setFont(new java.awt.Font("", 0, 12));
			ivjMiddleInitialLabel.setText("MI:");
			ivjMiddleInitialLabel.setBounds(115, 21, 23, 23);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjMiddleInitialLabel;
}

/**
 * Return the MiddleInitialTF property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextField getMiddleInitialTF() {
	if (ivjMiddleInitialTF == null) {
		try {
			ivjMiddleInitialTF = new java.awt.TextField();
			ivjMiddleInitialTF.setName("MiddleInitialTF");
			ivjMiddleInitialTF.setFont(new java.awt.Font("", 0, 12));
			ivjMiddleInitialTF.setBounds(109, 45, 36, 22);
			ivjMiddleInitialTF.setColumns(1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjMiddleInitialTF;
}

/**
 * Return the PaymentInformationGBP property value.
 * @return com.ibm.sdm.toolbox.GroupboxPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.ibm.sdm.toolbox.GroupboxPanel getPaymentInformationGBP() {
	if (ivjPaymentInformationGBP == null) {
		try {
			ivjPaymentInformationGBP = new com.ibm.sdm.toolbox.GroupboxPanel();
			ivjPaymentInformationGBP.setName("PaymentInformationGBP");
			ivjPaymentInformationGBP.setLayout(getPaymentInformationGBPGridLayout());
			ivjPaymentInformationGBP.setBounds(270, 86, 259, 273);
			ivjPaymentInformationGBP.setLabel("Payment Information");
			ivjPaymentInformationGBP.add(getCardTypeGBP(), getCardTypeGBP().getName());
			ivjPaymentInformationGBP.add(getCardNumberGBP(), getCardNumberGBP().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjPaymentInformationGBP;
}

/**
 * Return the PaymentInformationGBPGridLayout property value.
 * @return java.awt.GridLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private GridLayout getPaymentInformationGBPGridLayout() {
	java.awt.GridLayout ivjPaymentInformationGBPGridLayout = null;
	try {
		/* Create part */
		ivjPaymentInformationGBPGridLayout = new java.awt.GridLayout(2, 1);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjPaymentInformationGBPGridLayout;
}

/**
 * Return the PhoneLabel property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getPhoneLabel() {
	if (ivjPhoneLabel == null) {
		try {
			ivjPhoneLabel = new java.awt.Label();
			ivjPhoneLabel.setName("PhoneLabel");
			ivjPhoneLabel.setFont(new java.awt.Font("", 0, 12));
			ivjPhoneLabel.setText("Phone:");
			ivjPhoneLabel.setBounds(13, 204, 125, 23);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjPhoneLabel;
}

/**
 * Return the PhoneTF property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextField getPhoneTF() {
	if (ivjPhoneTF == null) {
		try {
			ivjPhoneTF = new java.awt.TextField();
			ivjPhoneTF.setName("PhoneTF");
			ivjPhoneTF.setFont(new java.awt.Font("", 0, 12));
			ivjPhoneTF.setBounds(13, 229, 226, 22);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjPhoneTF;
}

/**
 * Return the SearchButton property value.
 * @return java.awt.Button
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Button getSearchButton() {
	if (ivjSearchButton == null) {
		try {
			ivjSearchButton = new java.awt.Button();
			ivjSearchButton.setName("SearchButton");
			ivjSearchButton.setFont(new java.awt.Font("", 0, 12));
			ivjSearchButton.setLabel("Search");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjSearchButton;
}

/**
 * Return the StateLabel property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getStateLabel() {
	if (ivjStateLabel == null) {
		try {
			ivjStateLabel = new java.awt.Label();
			ivjStateLabel.setName("StateLabel");
			ivjStateLabel.setFont(new java.awt.Font("", 0, 12));
			ivjStateLabel.setText("State:");
			ivjStateLabel.setBounds(117, 159, 41, 23);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjStateLabel;
}

/**
 * Return the StateTF property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextField getStateTF() {
	if (ivjStateTF == null) {
		try {
			ivjStateTF = new java.awt.TextField();
			ivjStateTF.setName("StateTF");
			ivjStateTF.setFont(new java.awt.Font("", 0, 12));
			ivjStateTF.setBounds(110, 183, 50, 22);
			ivjStateTF.setColumns(2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjStateTF;
}

/**
 * Return the TextField1 property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextField getTextField1() {
	if (ivjTextField1 == null) {
		try {
			ivjTextField1 = new java.awt.TextField();
			ivjTextField1.setName("TextField1");
			ivjTextField1.setBounds(14, 74, 607, 9);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjTextField1;
}

/**
 * Return the VisaCB property value.
 * @return java.awt.Checkbox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Checkbox getVisaCB() {
	if (ivjVisaCB == null) {
		try {
			ivjVisaCB = new java.awt.Checkbox();
			ivjVisaCB.setName("VisaCB");
			ivjVisaCB.setFont(new java.awt.Font("", 0, 12));
			ivjVisaCB.setLabel("Visa");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjVisaCB;
}

/**
 * Return the ZipLabel property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private Label getZipLabel() {
	if (ivjZipLabel == null) {
		try {
			ivjZipLabel = new java.awt.Label();
			ivjZipLabel.setName("ZipLabel");
			ivjZipLabel.setFont(new java.awt.Font("", 0, 12));
			ivjZipLabel.setText("Zip:");
			ivjZipLabel.setBounds(163, 159, 31, 23);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjZipLabel;
}

/**
 * Return the ZipTF property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private TextField getZipTF() {
	if (ivjZipTF == null) {
		try {
			ivjZipTF = new java.awt.TextField();
			ivjZipTF.setName("ZipTF");
			ivjZipTF.setFont(new java.awt.Font("", 0, 12));
			ivjZipTF.setBounds(163, 183, 78, 22);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	return ivjZipTF;
}

/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}

/**
 * Handle the Applet init method.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void init() {
	super.init();
	try {
		setName("ReservationApplet");
		setLayout(null);
		setSize(631, 373);
		add(getHotelNameLabel(), getHotelNameLabel().getName());
		add(getApplicationNameLabel(), getApplicationNameLabel().getName());
		add(getLabel3(), getLabel3().getName());
		add(getLabel4(), getLabel4().getName());
		add(getLabel5(), getLabel5().getName());
		add(getTextField1(), getTextField1().getName());
		add(getCustomerInformationGBP(), getCustomerInformationGBP().getName());
		add(getPaymentInformationGBP(), getPaymentInformationGBP().getName());
		add(getFindCustomerGBP(), getFindCustomerGBP().getName());
		initConnections();
		conn4();
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {2}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() {
	// user code begin {1}
	// user code end
	getAddButton().addActionListener(this);
	getSearchButton().addActionListener(this);
	getDeleteButton().addActionListener(this);
	conn0SetTarget();
	conn1SetTarget();
	conn2SetTarget();
	conn3SetTarget();
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		java.awt.Frame frame;
		try {
			Class aFrameClass = Class.forName("uvm.abt.edit.TestFrame");
			frame = (java.awt.Frame)aFrameClass.newInstance();
		} catch (java.lang.Throwable ivjExc) {
			frame = new java.awt.Frame();
		}
		com.ibm.sdm.hotel.ReservationApplet aReservationApplet = new com.ibm.sdm.hotel.ReservationApplet();
		frame.add("Center", aReservationApplet);
		frame.setSize(aReservationApplet.getSize());
		aReservationApplet.init();
		aReservationApplet.start();
		frame.setVisible(true);

		aReservationApplet.destroy();
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of java.applet.Applet");
	}
}

/**
 * Set the CustomerManager to a new value.
 * @param newValue com.ibm.sdm.hotel.CustomerManager
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setCustomerManager(CustomerManager newValue) {
	if (ivjCustomerManager != newValue) {
		try {
			ivjCustomerManager = newValue;
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
}

}